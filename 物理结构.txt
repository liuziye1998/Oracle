物理存储结构简介
	KDBMS特点之一：逻辑数据结构（如表、视图和索引）与物理存储结构的独立性，物理结构和逻辑结构是分开的，管理数据的物理数据存储而不会影响对逻辑结构的访问
		例：重命名数据库文件不会重命名存储在其中的表
	Oracle数据库是在持久性的磁盘存储中存储的一组Oracle数据文件
	执行create database 后产生的如下数据库文件
		数据文件：
			数据文件是磁盘上的一组物理文件，由oracle数据库创建并包含如表、索引之类的数据结构
		临时文件：
			属于临时表空间的数据文件
		控制文件：
			跟踪数据库的物理组件的根文件
		联机重做日志文件：
			一组包含对数据库所做的更改记录的文件
数据库实例是一组管理数据库文件的内容结构
	常见的几种用于存储数据库文件的机制
		Oracle自动存储管理（Oracle ASM）：
			被专门设计用来供Oracle数据库使用的文件系统
		操作系统文件系统:
			是由称为 逻辑卷管理器 (LVM)的软件包创建，并建立在逻辑卷的基础上。LVM 使多个物理磁盘被合并到一个单一的连续地址空间，对上层软件显示为一块磁盘
				文件管理器:用于在文件系统中为文件分配和释放磁盘空间。
		原始设备：
			一些磁盘分区或未使用文件系统格式化的逻辑卷
			优点：能够直接执行I/O操作并按更大的缓冲区写入
			（直接I/O：应用程序直接向存储设备写入或从存储设备读取，绕过操作系统缓存区高速缓存）
		集群文件系统：
			文件系统是使多台计算机共享文件存储，同时保持一致的空间分配和文件内容的软件。在 Oracle RAC 环境中，
			集群文件系统使共享存储显示为在集群环境中由多台计算机共享的文件系统。在集群文件系统中，单个集群中的计算机失败不会使文件系统不可用。
			而在操作系统文件系统中，倘若某个通过 NFS 或其他手段共享文件的计算机失败，则文件系统会变得不可用
			
			数据库可以采用前面的某些存储机制的组合。例如，数据库可以将控制文件和联机重做日志文件存储在传统的文件系统中，
			将某些用户数据文件存储在原始分区上，剩余的数据文件存储在 Oracle ASM 中，而归档重做日志文件存储到集群文件系统。
oracle ASM	Oracle自动存储管理
	Oracle ASM 是一个针对 Oracle 数据库文件的高性能、 易管理的存储解决方案。Oracle ASM 是一个卷管理器，并提供一个专为数据库使用而设计的文件系统。
		优点：
			1.简化了与存储相关的任务
			2.跨物理磁盘分布数据，以消除热点，并提供均匀的磁盘性能
			3.在存储配置更改后自动平衡数据
	oracle ASM存储组件
		Oracle 数据库可以将数据文件存储为一个 Oracle ASM 磁盘组中的 OracleASM 文件，Oracle ASM 磁盘组是一个磁盘的集合，
		被 Oracle ASM 作为一个单元来管理。在一个磁盘组内， Oracle ASM 为数据库文件提供了一个文件系统接口。
	oracle 磁盘
		Oracle ASM 磁盘是提供给一个 Oracle ASM 磁盘组的存储设备。Oracle ASM 磁盘可以是某个存储阵列的物理磁盘、分区、逻辑单元号 (LUN) ，
		或是一个逻辑卷或网络附加文件。
		Oracle ASM 磁盘，可以当数据库正在运行时，被添加到磁盘组，或从磁盘组中删除。当你向磁盘组中添加一个磁盘时，
		您可以为磁盘指定一个名称，否则会自动被赋予一个 Oracle ASM 磁盘名称。
	Oracle 磁盘组
		Oracle ASM 磁盘组是一组 Oracle ASM 磁盘的集合，被作为一个逻辑单元来管理。在磁盘组中的数据结构是自包含的，并会在磁盘组中消耗一些磁盘空间
		在一个磁盘组内， Oracle ASM 为数据库文件提供了一个文件系统接口。存储在磁盘组中的文件的内容被均匀分布或条带化，以消除热点，
		并为所有磁盘提供均匀的性能。其性能与原始设备的性能相差无几。
	Oracle ASM文件
		Oracle ASM 文件是一个存储在 Oracle ASM 磁盘组中的文件。
		Oracle 数据库按文件与 Oracle ASM 进行通信。数据库可以将数据文件、 控制文件、 联机重做日志文件、和其他类型的文件存储为Oracle ASM 文件。
		当数据库要创建一个文件时， Oracle ASM 创建一个 Oracle ASM 文件，并分配一个以加号 (+)和磁盘组名称开头（如+ DISK1）的完全限定名称。
	Oracle ASM扩展区
		Oracle ASM 扩展区是用于容纳 Oracle ASM 文件内容的原始存储。一个 Oracle ASM 文件包含一个或多个文件扩展区。
		每个 Oracle ASM扩展区是由特定的磁盘上的一个或多个分配单元组成的。
		注意：Oracle ASM 扩展区与用于在段中存储数据的扩展区不同。
	Oracle ASM 分配单元
		分配单元是磁盘组中空间分配的基本单位。分配单元是由 OracleASM 分配的最小连续磁盘空间。由一个或多个分配单元形成一个Oracle ASM 扩展区。
	Oracle ASM实例
		Oracle ASM 实例是一个专门用于管理 Oracle ASM 磁盘的 Oracle 实例。
		ASM 实例和数据库实例都需要对 ASM 磁盘组中的磁盘的共享访问。ASM 实例管理磁盘组的元数据，并提供对数据库实例的文件布局信息。
		数据库实例直接与 ASM 磁盘进行 I/O ，而不需要通过 ASM 实例。ASM 实例无法装载数据库，并且比数据库实例执行的任务更少。
数据文件概述
		在操作系统层面， Oracle 数据库将数据库数据存储在数据文件中。每个数据库必须至少有一个数据文件。
	 Oracle 数据库在表空间中为用户数据分配空间。与段类似，表空间也是逻辑存储结构。每个段只属于一个表空间。
	 
	 表空间和数据文件密切相关，但又有重要区别
	 1.每个表空间包含一个或多个数据文件，这需要遵从运行 Oracle 数据库的操作系统。
	 2.数据库数据被集中地存储在位于每个数据库表空间的数据文件中。
	 3.数据库数据被集中地存储在位于每个数据库表空间的数据文件中。
	 4.数据库必须有 SYSTEM 表空间和 SYSAUX 表空间。Oracle 数据库自动在数据库创建过程中为 SYSTEM 表空间分配数据库的第一个数据文件。
永久数据文件和临时数据文件
	永久表空间中包含持久性的模式对象。永久表空间中的对象存储在数据文件中。
	
	临时表空间中仅包含用于会话期间的模式对象。本地管理的临时表空间具有临时文件，它是被设计用于存储在哈希、 排序、和其他操作使用的数据的特殊文件。
	临时文件还用于存储在内存中的空间不足时的结果集数据。
	
	临时文件类似于永久数据文件，但有以下例外情况：
 		1.永久性数据库对象（如表）绝不会存储在临时文件中。
		2.临时文件始终被设置为 NOLOGGING 模式，这意味着永远不会为其生成重做。介质恢复不识别临时文件。
 		3.不能将临时文件置为只读模式。
		4.无法使用 ALTER DATABASE 语句来创建一个临时文件。
 		5.当你创建临时文件或调整其大小时，并不能始终保证会为他们分配指定文件大小的磁盘空间。在 Linux 和 UNIX 等的文件系统上，临时文
		件被创建为 稀疏文件。在这种情况下，磁盘块并不是在文件的创建或调整大小时分配的，而是在块第一次被访问时分配的。
		6.稀疏文件使你能够快速地创建临时文件或调整其大小 ；但是，当之后访问临时文件时，可能会超出磁盘空间。
 		7.临时文件信息显示在数据字典视图 DBA_TEMP_FILES 和动态性能视图 V$TEMPFILE 中 ，但不在 DBA_DATA_FILES 或V$DATAFILE 视图中。

联机和脱机文件
	每个数据文件可能是 联机 的（可用） 或 脱机 的（不可用）。脱机的数据文件不可用直到恢复联机状态时可用
	
数据文件结构
	Oracle 数据库通过分配指定数量的磁盘空间，加上 数据文件头开销，来为表空间创建数据文件。在 Oracle 数据库之下运行的操作系统，负责在将文
	件分配给数据库之前，从文件中清除旧信息和授权。
	数据文件头包含数据文件的元数据，每个文件头包含一个绝对文件号和一个相对文件号。
		绝对文件号唯一地标识数据库内的数据文件。
		相对文件号唯一地标识表空间内的数据文件
	当 Oracle 数据库刚创建一个数据文件时，分配的磁盘空间已格式化，但不包含任何用户数据。但是，数据库会保留此空间，将来用于容纳其相关联的
表空间中的数据段。随着表空间中的数据增长，Oracle 数据库将用数据文件中的可用空间来为段分配扩展区。
	表空间中的对象不断更新和删除，会产生很多小的空白空间，但太小不足以被重用以容纳新数据。这种类型的空白空间称为碎片化
	
控制文件
	数据库控制文件是一个小的二进制文件，仅与一个数据库相关联
	
	使用控制文件
		控制文件是 Oracle 数据库用来查找数据库文件，并从总体上管理数据库状态的根文件
	控制文件包含一下信息
		1.数据库名称和数据库唯一标识符（DBID)
		2.创建数据库的时间戳
		3.有关数据文件、 联机重做日志文件、和归档重做日志文件的信息
		4.表空间信息
		5.RMAN备份
	控制文件用于一下目的
		1.它包含有关数据文件、 联机重做日志文件等为打开数据库所需的信息。
		2.控制文件跟踪数据库的结构变化。
		3.包含未打开数据库时必须可访问的元数据
		4.数据库信息有所变动时会同步到控制文件中
		
	只要数据库是开启的控制文件必须是可用的以便写入
	
	多个控制文件
		Oracle 数据库对同一数据库启用多个完全相同的控制文件，并同时打开和写入。通过在不同的磁盘上多路复用控制文件，数据库可以实现冗余，从而
避免单点故障。

	控制文件结构
		有关数据库的信息存储在控制文件的各个不同 部分中。每个部分是有关数据库的某个方面的一组 记录。例如，控制文件中有一个部分跟踪数据文件，并
包含一个记录集合，每一个数据文件有一条记录。每个部分存储在多个逻辑控制文件块中。同一部分的记录可以跨越块。
	
	控制文件包含以下类型的记录
		1.循环重用记录	可以被覆盖 可重用
		2.非循环重用记录	不可以被覆盖 不可重用 除非从表中删除相应的对象
		
	只有数据库能修改控制文件中的内容
	
	对于控制文件 Oracle数据库直接从磁盘读取并写入到程序全局区（PGA）。每个进程为控制文件块分配一定的 PGA 内存。
		
联机重做日志
	联机重做日志用于记录对数据文件的更改，用于恢复的最关键结构是联机重做日志，它由两个或多个预分配文件组成，
	使用联机重做日志	
		以防数据丢失，具体来说，在一个实例失败后，联机重做日志文件使 Oracle 数据库可以恢复已提交但尚未写入数据文件的数据。
	Oracle 数据库将每个事务同步地写入重做日志缓冲区，然后将其写入到联机重做日志。日志的内容包括未提交的事务、撤消数据、和模式和对象管理语句。
	
	数据库实例的联机重做日志称为重做线程
	每个实例具有其单独的重做线程可以避免对单一联机重做日志文件组的争用。
	一个联机重做日志包含两个或更多联机重做日志文件。Oracle 数据库要求最少两个文件，以保证当另一个正在被归档时，总有一个始终可供写入（如
果数据库是在归档模式下）

	当前重做日志
		正在由日志写入器（LGWR）进程写入的联机重做日志文件称为当前联机重做日志文件。
	日志切换
		Oracle 数据库一次只使用一个联机重做日志文件来存储从重做日志缓冲区写入的记录。当数据库停止向一个联机重做日志文件写入，并开始向另一个写入时，发生
日志切换。通常，切换发生在当前联机重做日志文件已满，且必须继续写入时，也可手动切换
	当数据库重复使用一个联机重做日志文件时，此文件接收下一个可用的日志序列号
	
	已填充的联机重做日志文件的可重用性取决于归档模式：
		如果禁用了归档，这意味着数据库处于 NOARCHIVELOG 模式下，则填充的联机重做日志文件，在数据库写入器 (DBWn) 已对该日志中的更改记录执行过 
检查点操作并写入到磁盘后，该日志即是可重新使用的。
		如果启用了归档，这意味着数据库是在 ARCHIVELOG 模式下，则填充的联机重做日志文件，只有在该日志中所包含的更改记录被写入数据文件，且该日志
已被归档后，该日志才是可重新使用的。
		在某些情况下，日志写入器可能无法重新使用某个现有的联机重做日志文件。例如，联机重做日志文件可能处于活动状态（实例恢复需要它）
另外，一个联机重做日志文件可能处于被清除过程中。
	
	联机重做日志文件
		Oracle 数据库可以在不同的位置自动维护两个或更多联机重做日志的相同副本。一个联机重做日志组包括一个联机重做日志文件及其冗余副本。
		作用：可以防止重做日志的丢失，单个磁盘故障不会导致整个联机重做日志的丢失
		
	归档重做日志文件 （一个归档重做日志文件包括重做条目和联机重做日志组的相同成员的日志序列号。）
		归档重做日志文件是联机重做日志组的已填充成员的副本。此文件不是该数据库的一部分，而是由该数据库生成、并被写到用户指定位置的联机重做日
志文件脱机副本。
	归档重做日志文件是备份和恢复策略的关键部分
		作用：1.恢复数据库备份
			2.更新备用数据库
			3.使用 LogMiner 实用程序获取有关数据库的历史信息
			
	归档：生成一个归档重做日志文件操作
	
	联机重做日志的结构
		联机重做日志文件包含重做记录。重做记录由一组更改向量组成，每个向量描述对某数据块的一个更改。
		
	重做记录记录了与更改相关的所有元数据，包括如下：
		1.更改的 SCN 和时间戳
		2.变更事务的事务 ID
		3.事务提交时的 SCN 和时间戳（如果它已提交）
		4.所做更改的操作类型
		5.被修改的数据段的名称和类型
