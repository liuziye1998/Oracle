逻辑存储单元从大到小排列顺序为：数据块、扩展组、段、表空间

数据块
	Oracle数据库将数据存储成数据块（数据块类似于Linux中文件系统的数据块），数据块是Oracle数据库可使用或可分配的最小存储单位
扩展区
	是一组逻辑上连续的数据块，被用来分配存储特定类型的信息
段
	是为一个特定的数据对象（如一个表），分配的一组扩展区。每个段仅属于一个表空间，单个表空间绝不会跨越多个数据文件
	
常见的管理表空间的两种方式
	本地管理表空间（默认值）
		概述：
			数据库使用表空间中的位图来管理表扩展区，分为自动段空间管理和手动段空间管理，本地管理表空间需要预留表空间的一部分用于位图
		详解：
			本地管理表空间在数据文件头中维护一个位图，以跟踪数据文件体中的可用空间和已用空间。每一位对应一组块。
当空间被分配或释放时，Oracle 数据库更改位图值，以反映数据块的新状态。
		优势：
			1.避免使用数据字典来管理扩展区
				如果消耗或释放一个扩展区会导致在数据字典表或撤消段中消耗或释放空间，则在字典管理的表空间中会发生递归操作。
			2.自动跟踪相邻的可用空间
				通过这种方式，数据库消除了合并空闲扩展区的需要。
			3.自动确定本地管理扩展区的大小或者，在本地管理表空间中所有的扩展区可以具有相同的大小，并覆盖对象存储选项。
	段空间管理：
		概述：段空间管理是一个从包含该段的表空间继承来的属性。在一个本地管理表空间中，数据库可以自动地或手动地管理段。
		分类：
			ASSM（自动段空间管理）
				概述：ASSM 方法使用位图管理空间
				优点：
					1.简化管理，通过PCTFREE参数指定要为块中保留用于将来的更新的空间百分比
					2.增强并发性
					3.对 Oracle 真正应用集群 （Oracle RAC） 环境中实例的空间动态亲合性
			MSSM（手动段空间管理 ）
				概述:使用称为 空闲 列表的链表来管理段中的可用空间。对一个具有可用空间的数据库对象，有一个空闲列表会跟踪位于高水位线
(HWM) 之下的数据块，所谓高水位，即已使用段空间和未使用段空间之间的分界线。当块被使用时，数据库根据需要将块放入空闲列表，或将块从空
闲列表中删除。
				PCTUSED 设置在当前使用块中必须存在的可用,空间百分比，当使用率低于该百分比时，数据库会将其放入空闲列表中
				
				例如，如果 CREATE TABLE 语句中设置PCTUSED 为 40，则只有当块空间使用少于 40%的情况下，您才能往段中的块插入新行。
				
				一个对象可能有多个空闲列表可以创建具有一个或多个 空闲列表组的对象，空闲列表组是空闲列表的集合。每个组有一个 主空闲列表，
用于管理组中的各个的处理 空闲 列表。空闲列表、尤其是空闲列表组的空间开销，可能非常显著。

				
	字典管理表空间
		数据库使用数据字典来管理扩展区
		概述：
			每当分配或释放了一个扩展区时， Oracle 数据库更新数据字典中的表。例如，当表需要扩展区时，数据库查询数据字典表，并搜索空闲扩展区。
如果数据库找到了空间，则修改一个数据字典表，并插入一行。按这种方式，数据库通过修改和移动数据来管理空间。
			数据库在后台为数据库对象获取空间而执行的 SQL 是 递归 SQL。频繁使用递归 SQL 可能会对性能有负面影响，因为必须串行化对数据字典的更新。
				
			本地管理表空间避免了这种性能问题
数据块
	概述：
		Oracle 数据库以 数据块（也称为 Oracle 块或 页）为单位，来管理数据库数据文件中的逻辑存储空间。数据块是数据库 I/O 的最小单位。
	数据块大小：
		 DB_BLOCK_SIZE 初始化参数在数据库被创建时设置其数据块大小。此大小是 SYSTEM 和 SYSAUX 表空间的大小，并且是其它表空间的默认大小。
不能更改数据库的块大小，除非重新创建数据库。
		如果尚未设置 DB_BLOCK_SIZE，则默认数据块大小特定于操作系统。数据库的标准数据块大小为 4 KB 或 8 KB。如果数据块和操作系统块的大小不
同，则数据块大小必须是操作系统块大小的整数倍

		数据块和操作系统块
			概述：
				在物理级别，存储在磁盘文件中的数据库数据由操作系统块组成。 操作系统块是操作系统可以读取或写入的最小数据单位。相比之下，
Oracle 块是一个逻辑存储结构，其大小和结构对操作系统是透明的

		数据块与操作系统块的逻辑分离具有以下含义：
 			1.应用程序不需要确定磁盘上的数据的物理地址。

			2.数据库数据可以在多个物理磁盘上进行条带化或镜像。

	数据块格式
		1.块头：存放一些基本信息，如物理位置，块所属的段类型（数据段、索引段、回滚段等）

		2.表目录：如果块中存储的数据为表数据，则表目录中保存这个表的相关信息，对于堆组织表，此目录包含有关其行存储在该块中的表的元数据。多
个表可以将行存储在相同的块中。

		3.行目录：如果块中存储的数据为表数据，则行目录中保存数据行的相关信息。如果块中存储的数据为表数据，则行目录中保存数据行的相关信息。

		4.行记录：真正存放数据的区域，这部分空间已被使用。

		5.自由空间：未使用的区域，用于新行的插入或者已经存在行的更新。
		
	数据块开销：（平均下来，块开销总计在84到107字节左右）
		1.块头：存放一些基本信息，如物理位置，块所属的段类型（数据段、索引段、回滚段等）
		
		2.表目录：对于堆组织表，此目录包含有关其行存储在该块中的表的元数据。多
个表可以将行存储在相同的块中。

		3.行目录：对于堆组织表，此目录描述该块的数据部分中的行的位置
		
	行格式：
		概述：
			块的行数据部分包含实际数据，如表行或索引键条目等。正如每个数据块具有一个内部的格式，每一行也有一个 行格式，使得数据库能够跟踪行中的数据
Oracle 数据库以可变长度记录形式来存储行。行包含在一个或多个 行 片断中。每个行片断有一个行头和列数据

	行头：
		概述：
		Oracle 数据库使用行头来管理存储在块中的行片断。
		
		行头包含以下信息：
			1.行片断中的各列
			2.位于其他数据块中的各个行片断
			3.表簇的簇键
			
		包含在一个块中的完全行至少有 3 个字节的行头。
		
	列数据：
		概述：
			在行头之后的列数据部分存储行中的实际数据
		每一行都在数据块标头的行目录中有一个槽位。槽位指向行的开始部分。
	
	Rowid格式
		概述：
			Oracle 数据库使用一个 rowid 唯一地标识一行。在内部，rowid 是一个结构，用于保存数据库访问行所需要的信息。一个 rowid 并不物理地存储在数
据库中，而是从存储数据的文件和块推导而来的。
		扩展的 rowid 包括数据对象号。这种 rowid 类型使用每个行的物理地址的64 进位编码。编码的字符为 A-Z 、 a-z 、 0-9 、 + 、和 / 。
	一个扩展 rowid 以一个四段式格式显示，OOOOOOFFFBBBBBBRRR，此格式分为以下几个组件		
		1.OOOOOO
			数据对象 号标识段数据库中的每个段都被分配了一个数据对象号。同一段中的模式对象（如一个表簇）具有相同的数据对象号。
		2.FFF
			表空间相对数据文件号，标识包含行的数据文件 
		3.BBBBBB
			数据块号标识包含行的块 （如示例 12-1 中的块 AAAABS）。块号是相对于他们的数据文件的，而不是其表空间。因此，具有相同块号的
两行，可以驻留在同一表空间的不同数据文件中
		4.RRR
			行号标识块中的行
		在一个 rowid 被分配给一个行片断后，该 rowid 在特殊情况下可以更改。例如，如果启用了 行移 动，则 rowid 可能会因为分区键更新、 闪回表操作、
收缩表操作等而发生变化。如果禁用了行移动，则如果使用 Oracle 数据库实用程序导出和导入了行，其 rowid 可能会发生变化。
		注意：
			在内部，数据库执行行移动，就像行是被物理地删除、然后又重新插入。不过，行移动被认为是更新，会隐含触发触发器
	
	数据块压缩：
		概述：数据库可以使用表压缩来消除在数据块中的重复值，使用基本表压缩和 OLTP 表压缩的数据块，其格式与一个未压缩的块实质上
是相同的。区别是使用位于块开头的 符号表来存储行和列的重复值。数据库使用一个到符号表的短引用来替换这些重复出现的值

	数据块的空间管理
		概述：
			随着数据库从底向上不断填充数据块，在行数据和块头之间的 可用 空间就会逐渐减少。在更新期间，当将一个尾部空值更改为非空值时，可用空间也会
变少。数据库会管理数据块中的可用空间，以优化性能并避免空间浪费。

	数据块中的可用空间百分比：
		概述:
			PCTFREE 存储参数对于数据库如何管理其可用空间非常重要。此 SQL 参数设置为更新现有的行而保留的可用空间最小百分比。因此，PCTFREE 对于
防止行迁移并避免空间浪费非常重要。

	优化数据块中的可用空间
		概述：
			虽然可用空间的百分比不能小于 PCTFREE，但其可用空间量可以更大。例如， 20%的 PCTFREE 设置可以防止可用空间总量少于 5%，但它允许该块
具有 50%的可用空间。下面的 SQL 语句可能会增加可用空间：
			1.DELETE 语句
			2.UPDATE 语句，要么将现有值更新为更小的值，或者增大现有值并被强制迁移到另一个行
			3.在使用了 OLTP 压缩的表上的 INSERT 语句，如果插入操作往块中填充了数据，则数据库会调用块压缩，结果可能会导致在块中有更多的可用空间
			
				在下列条件下，释放的空间可供 INSERT 语句使用
				
				1.如果 INSERT 语句是位于释放空间的语句之后，且处于相同的事务中，则该语句可以使用已释放的空间。
				
				2.如果 INSERT 语句与释放空间的语句位于各自单独的事务中（也许是由另一个用户运行的），只要另一个事务已提交，则该语句可以在需要此空间时使用它。
	合并碎片空间
		概述：
			被释放的空间与数据块可用空间的主要区域可能是连续的，也可能是不连续的，不连续的可用空间称为 碎片空间
			
		只有在满足以下条件时，Oracle 数据库才会自动且透明地合并数据块中的可用空间，
			1.INSERT 或 UPDATE 语句试图使用的块，包含足够的可用空间来容纳新的行片断。
 			2.可用空间已被碎片化，以至于该行片断不能插入到块中的某一个连续区域。
		合并后，可用空间量与操作之前是相同的，只不过该空间现在已成为连续的。
	重用索引空间
		数据库可以重复使用一个索引块内的空间。例如，如果您往列中插入了一个值，又将其删除，而对此列的索引仍然存在，则数据库可以在某行需要时，
重新使用该索引槽位。

		数据库可以重复使用一个索引块本身。与表块不同，一个索引块仅当其完全为空时，它才是空闲的。数据库将空块放入索引结构的空闲列表中并使其可
重新使用。然而，Oracle 数据库不会自动压缩索引： 这需要一个 ALTER NDEX REBUILD 或 COALESCE 语句。

	链接和已迁移的行
		Oracle 数据库必须管理太大而不能放入一个单一块的行。可能存在下列情况
		1.该行太大，在它第一次插入时，无法放入一个数据块
		2.本来可以放入一个数据块的行，在更新后整体行长增加了，但没有足够的可用空间来容纳更新的行。
		3.超过 255 个列的行。

	段顾问：是一个 Oracle 数据库组件，这个顾问工具可以对具有很多可用空间的对象，或有太多行链接的对象，提供建议
	
扩展区
	概述
		扩展区是数据库存储空间分配的逻辑单位，由多个连续数据块组成。在一个扩展区中的数据块在逻辑上是连续的，但在物理上可能由于 RAID 条带化和
文件系统的实施方式而在磁盘上分散分布
	分配扩展区：
		在默认情况下，在数据段被创建时，数据库会为数据段分配一个 初始 扩展区。一个扩展区总是包含在一个数据文件中。如果初始扩展区满了，并需要更多空间时
		，则数据库自动为该段分配一个 增量扩展区。一个增量扩展区是为该段创建的后续扩展区。
	释放扩展区
		通常，用户段的扩展区不会返回给表空间，除非您使用 DROP 命令删除该对象。在 Oracle 数据库 11g 第 2 版中 (11.2.0.2)也可以使用
DBMS_SPACE_ADMIN 软件包删除段。例如，如果你删除了表中的所有行，但数据库不会回收数据块以供表空间中的其他对象使用

		基于对象中的碎片级别，Oracle 数据段顾问工具可帮助确定一个对象是否有空间可回收。以下技术可以释放扩展区：
 			1.你可以使用 在线段收缩来回收在段中的零碎空间。段收缩是一种在线、 就地的操作。通常，紧凑的数据会获得更好的缓存利用率，且
在全表扫描中只需读取更少的块。

 			2.您可以将非分区表或表分区的数据移动到一个新的段，或可选地移入另一个你在其中具有配额的表空间。
 
 			3.您可以重建或合并索引 （请参见"重用索引空间"）。

			4.您可以 截断表或表簇，这将删除所有行。默认情况下，除了留下由MINEXTENTS 存储参数所指定的扩展区数之外，Oracle 数据库将释
放已删除行所使用的所有空间。在数据库 11g 第 2 版 (11.2.0.2)中，您还可以用带有 DROP ALL STORAGE 选项的 TRUNCATE 语句来删除整个段。

 			5.您可以释放未使用的空间，即释放数据库段的高水位端的未使用空间，以便供表空间中的其他段使用

		当扩展区被释放时，Oracle 数据库将修改本地管理表空间的数据文件中的位图，以反映重新获得作为可用空间的扩展区。被释放扩展区的数据块中的
任何数据变得不可访问。
	
	扩展区的存储参数
		每一个段是由扩展区表示的 存储参数来定义的。这些参数控制 Oracle 数据库如何为段分配可用空间。
存储设置按如下的优先级顺序确定，列表中较高的设置会覆盖较低的设置：
 		1. 段存储子句
 		2. 表空间存储子句
 		3. Oracle 数据库缺省值

	本地管理表空间可以具有统一的扩展区大小，或由系统自动确定可变的扩展区大小：
		1.对 统一的 扩展 区，可以指定扩展区的大小，或使用默认的大小 1MB。表空间中的所有扩展区都是一样大小。本地管理的临时表空间
只能使用这种分配类型。
 		2.对于 自动分配的扩展 区由 Oracle 数据库确定新分配扩展区的最佳大小。

段概述
	段是一个表空间内包含某个逻辑存储结构的所有数据的扩展区集合。例如，Oracle 数据库分配一个或多个扩展区，形成一个表的数据段。数据库还分
配了一个或多个扩展区，形成一个表的索引段。
	用户段
		在数据库中的单个数据段用于存储一个用户对象的数据。段有不同的类型。
		
		用户段的示例包括：
 			1.表、 表分区、或表簇
 			2.大对象或大对象分区
 			3.索引或索引分区
		每个未分区对象和对象分区存储在其自己的段中。例如，如果索引有五个分区，则有五个段包含该索引的数据。
		
	创建用户段
		默认情况下，数据库使用 延迟的段创建 ，当创建表和索引时，仅更新数据库元数据。在 Oracle 数据库 11g 第 2 版 (11.2.0.2) 中，数据库在创建分区
时，也延迟段创建。在用户向表或分区中插入第一行时，数据库才创建表或分区、 及其 LOB 列、和索引段等。
		从 Oracle 数据库 11g第 2 版 (11.2.0.2) 开始，你可以使用该 PL/SQL 包执行下列操作：
 			1.为没有创建段的空表或分区手动实例化段
 			2.从空表或当前分配了空段的分区中删除段
	临时段
		当处理查询时，Oracle 数据库通常在 SQL 语句执行的中间阶段需要临时工作区。可能需要临时段的典型操作包括排序、 哈希、和合并位图。当创建
索引时，Oracle 数据库将索引段置于临时段，然后当索引创建完成时将其转化成永久段
	
	为查询分配临时段
		Oracle 数据库在用户会话期间，根据需要为查询分配临时段，并在查询完成后将其删除。
		
		数据库在分配给用户的临时表空间中创建临时段。表空间的默认存储特性决定了临时段中的扩展区特征。由于分配和释放临时段会频繁发生，最佳做法
就是为临时段创建至少一个特别的表空间。数据库将 I/O 分布到多个磁盘，并避免在 SYSTEM 和其他表空间使用临时段，以防碎片化。

	为临时表及其索引分配临时段
		Oracle 数据库也可以为临时表及其索引分配临时段。临时表仅保存一个事务或会话的持续期间的数据。每个会话只能访问分配给该会话的扩展区，而
不能访问分配给其他会话扩展区

	撤消段
		Oracle 数据库维护事务的操作记录，统称为撤消数据。Oracle 数据库使用撤消来执行下列操作：
 			1.回滚一个活动事务
 			2.恢复一个已终止的事务
 			3.提供读取一致性
 			4.执行一些逻辑闪回操作
		Oracle 数据库将撤消数据存储在数据库内，而不是在外部日志中。存储撤消数据的块与数据块类似，对这些块的更改将生成重做数据。通过这种方式，
Oracle 数据库可以高效地访问撤消数据，而无需读取外部日志。

		撤消数据存储在一个撤消表空间中。Oracle 数据库提供了一个称为自动撤消管理模式的完全自动化机制，来管理撤消表空间中的撤消段和空间。
		
		如果下一个扩展区确实包含某个活动事务的数据，则数据库必须分配一个新的扩展区。
		
	事务回滚
		当发出了一个 ROLLBACK 语句时，数据库将使用撤消记录，来回滚未提交事务对数据库所做的更改。在恢复期间，数据库将回滚从联机重做日志应用
到数据文件的任何未提交更改。当数据正在被其它用户更改时，撤消记录通过维护数据前像, 为在同一时间访问数据的用户提供读取一致性。

	段空间和高水位标记
		Oracle 数据库通过跟踪段中的块状态来管理空间。 高水位标记 (HWM) 是段中的一个点，超过该点的数据块是未格式化和未使用过的。

		MSSM 使用空闲列表来管理段空间。在创建表时，段中的块并未被格式化。当一个会话初次向表中插入行时，数据库将搜索空闲列表来查找可用的块。
如果数据库未找到可用的块，则它会预格式化一组块，并将它们放置在空闲列表中，并开始将数据插入到块中。在 MSSM 中，全表扫描会读取 HWM之下的 所有 块。

		ASSM 不使用空闲列表，所以必须以不同的方式管理空间。当会话初次向表中插入数据时，数据库只格式化一个单一位图块，而不像在 MSSM 中那样
预格式化一组块。位图取代了空闲列表，用于跟踪在段中的块的状态。数据库使用位图来查找可用的块，然后在往块写入数据之前将其格式化。ASSM将插入
操作分散到多个块，以避免并发问题。
			在一个 ASSM 段中的每个数据块处于以下状态之一：
 				1.在 HWM 之上
					这些块是未格式化的，且从未使用过。
 				2.在 HWM 之下
					这些块处于以下状态之一：
						o 已分配，但当前未格式化且未使用
						o 已格式化且包含数据
						o 已格式化且为空，因为数据已被删除
			当 HWM 与低 HWM 之间的块填满时，HWM 向右推进，而低 HWM 相应推进到旧的 HWM 的位置。数据库不断插入数据，随着时间的推移，HWM 继续向右推进，
而低 HWM 总尾随其后。除非您手动重建、 截断、或缩小该对象，否则 HWM 从不倒退。

表空间
	概述：
		表空间是段的逻辑存储容器。段是占用存储空间的数据库对象，如表和索引。在物理级别，表空间将数据存储在一个或多个数据文件或临时文件中。
		
	数据库必须有 SYSTEM 和 SYSAUX 表空间。
	
	永久表空间
		永久表空间对持久性模式对象进行分组。表空间中的对象的段物理上存储在数据文件中
		
		表空间可以实现以下目标
			1.控制数据库数据的磁盘空间分配
			2.将单个表空间联机或脱机，而不影响整个数据库的可用性
			3.执行单个表空间的备份和恢复
			4.使用 Oracle 数据泵实用程序导入或导出应用程序数据
			5.通过创建一个可传输 表空间，可以将其从一个数据库复制或移动到另一个数据库，甚至跨平台
				通过传输表空间来移动数据，可能比导出/导入或卸载/装载相同的数据要快几个数量级，因为传输表空间只涉及复制数据文件并集成表空
间元数据。当您传输表空间时，还可以移动索引数据。

	SYSTEM 表空间
		SYSTEM 表空间是在数据库被创建时就包括的一个必要的管理性表空间。		Oracle 数据库使用 SYSTEM 来管理数据库。
		SYSTEM 表空间包括以下信息，全部都由 SYS 用户所拥有
			1.数据字典
			2.包含数据库管理信息的表和视图
			3.已编译的存储对象，如触发器、 过程、和包等
		SYSTEM 表空间的管理与其他表空间几乎一样，但需要较高的特权，且在某些方面有所限制。例如，您不能重命名或删除 SYSTEM 表空间。
		
	SYSAUX 表空间
		SYSAUX 表空间是 SYSTEM 表空间的一个辅助表空间。SYSAUX 表空间为未驻留在 SYSTEM 表空间的数据库元数据提供了一个集中的位置。它减少
了在种子数据库和用户定义的数据库中缺省创建的表空间数量。
		包括 Oracle 企业管理器和 Oracle 流在内的几个数据库组件将 SYSAUX 表空间作为其默认存储位置。因此，SYSAUX 表空间在数据库创建或升级过程中
自动创建。
		在正常的数据库操作中，数据库不允许删除或重命名 SYSAUX 表空间。如果 SYSAUX 表空间变得不可用，则数据库的核心功能仍是可用的。使用
SYSAUX 表空间的数据库特性可能会失败，或只能发挥有限功能

	撤消表空间
		是为系统管理的撤消数据而保留的一个本地管理表空间。与其他永久表空间类似，撤消表空间也包含数据文件。在这些文件中的撤消块被分组为一些扩展区
		
	自动撤销管理模式
		撤消表空间要求数据库处于默认的自动撤消管理模式。此模式消除了手动管理撤消段的复杂性。数据库自动对其进行优化，提供撤消数据最佳可能的保
留期，以满足可能需要此数据的长时间查询

	自动撤销保留
		撤消保留期是 Oracle 数据库在覆盖旧的撤消数据之前尝试对其保留的最小时间量。撤消保留很重要，因为长时间运行的查询可能需要旧数据块前像以
提供读取一致性。此外，某些 Oracle 闪回功能也可能会依赖于撤消数据的可用性
		Oracle 数据库自动为当前的撤消表空间提供最佳可能的撤消保留，如果空间允许数据库将撤消保留期调整为比最长运行的查询稍长
	
	临时表空间
		临时表空间仅包含在会话期间存在的瞬态数据。永久模式对象不能驻留在临时表空间中。数据库临时表空间数据存储在 临时 文件中。
		本地管理的 SYSTEM 表空间不能作为默认临时存储
		字典管理的SYSTEM ，且在创建数据库时未定义一个默认临时表空间，则 SYSTEM 为其默认临时存储
		
	表空间模式：由表空间模式确定表空间的可访问性
		读写模式：
			用户可以读取和写入表空间。所有表空间最初都被创建为可读/写的。 SYSTEM 、 SYSAUX 表空间、和临时表空间总是可读/写的，也
就是不能将它们置为只读。
		只读模式：
			对表空间中数据文件的写操作被禁止。只读表空间可以驻留在只读介质上，如 DVD 或 WORM 驱动器。只读表空间消除了对数据库中大型的静态部分执行备份和恢复的需
要。只读表空间不会变更，因此不需要重复的备份。如果在介质故障后恢复一个数据库，则不需要恢复只读表空间。

	联机和脱机表空间
		当数据库处于打开状态时，表空间可以处于 联机状态 （可访问） 或 脱机 状态 （不能访问）。表空间通常是联机的，以便其数据可供用户使用。
SYSTEM 表空间和临时表空间不能脱机

	当一个表空间进入脱机状态时，数据库执行以下任务
		1.数据库不允许后续 DML 语句引用脱机表空间中的对象。脱机的表空间无法被除 Oracle 数据库之外的任何其它实用程序读取或编辑
		2.活动事务中的某些已完成的语句，曾引用了脱机表空间中的数据，这些事务在事务级别不受影响
		3.数据库将那些已完成语句相应的撤消数据，保存在 SYSTEM 表空间中的延迟撤消段中。当表空间被联机时，数据库在必要时将撤消数据应用到该表空间
		
	表空间文件大小
		表空间可以是一个 大文件 表空间或 小文件 表空间。这些表空间的区别在于SQL 语句的执行是否需要显式引用数据文件或临时文件。
			区别如下
			1.小文件表空间可以包含多个数据文件或临时文件，但其文件不能像大文件表空间中的文件那么大。这是默认的表空间类型
			2.大文件表空间仅包含一个非常大的数据文件或临时文件。这种类型的表空间可以
				1.提高数据库的存储容量
					数据库中的数据文件的最大数量有限 （通常为 64 KB 个文件），所以增加每个数据文件的大小也就增加了总的存储量
				2.减轻管理过多数据文件和临时文件的负担
					大文件表空间使用 Oracle 管理的文件和自动存储管理 (OracleASM)，通过消除添加新文件和处理多个文件的需要，简化了文件管理
				3.在表空间上（而不是在单个文件上）执行操作
					大文件表空间将表空间作为磁盘空间管理、 备份和恢复等的主要单位
					
			3.大文件表空间只支持使用 ASSM 的本地管理表空间。然而，本地管理的撤消和临时表空间，即便在手动段管理模式下，仍然可以是大文件表空间


